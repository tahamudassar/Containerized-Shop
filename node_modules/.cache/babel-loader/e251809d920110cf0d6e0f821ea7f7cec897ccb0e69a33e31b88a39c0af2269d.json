{"ast":null,"code":"// src/features/cart/cartSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  // Array to hold items added to the cart\n  itemCount: 0,\n  total: 0 // Add total property to the initial state\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      state.items.push(action.payload); // Add new item directly to the items array\n      state.itemCount += 1; // Increment item count\n      state.total = parseFloat((state.total + action.payload.price).toFixed(2)); // Add item price to total and round to 2 decimal places\n    },\n    removeFromCart: (state, action) => {\n      const {\n        id,\n        forceZeroQuantity\n      } = action.payload; // Destructure id and forceZeroQuantity from the payload\n      if (forceZeroQuantity) {\n        const itemsToRemove = state.items.filter(item => item.id === id);\n        state.total = parseFloat((state.total - itemsToRemove.reduce((sum, item) => sum + item.price, 0)).toFixed(2)); // Subtract total price of removed items and round to 2 decimal places\n        state.itemCount -= itemsToRemove.length; // Decrement item count by the number of items removed\n        state.items = state.items.filter(item => item.id !== id); // Remove all items with the given id\n      } else {\n        const index = state.items.findIndex(item => item.id === id);\n        if (index !== -1) {\n          state.total = parseFloat((state.total - state.items[index].price).toFixed(2)); // Subtract item price from total and round to 2 decimal places\n          state.items.splice(index, 1); // Remove one instance of the item with the given id\n          state.itemCount -= 1; // Decrement item count by one\n        }\n      }\n      if (state.itemCount < 0) {\n        state.itemCount = 0; // Prevent negative item count\n      }\n    },\n    resetCart: state => {\n      state.items = [];\n      state.itemCount = 0; // Reset the cart and item count\n      state.total = 0; // Reset the total\n    },\n    decreaseQuantity: (state, action) => {\n      const index = state.items.findIndex(item => item.id === action.payload.id);\n      if (index !== -1) {\n        state.total = parseFloat((state.total - state.items[index].price).toFixed(2)); // Subtract item price from total and round to 2 decimal places\n        state.items.splice(index, 1); // Remove one instance of the item with the given id\n        state.itemCount -= 1; // Decrement item count\n        if (state.itemCount < 0) {\n          state.itemCount = 0; // Prevent negative item count\n        }\n      }\n    }\n  }\n});\n\n// Export actions\nexport const {\n  addToCart,\n  removeFromCart,\n  resetCart,\n  decreaseQuantity\n} = cartSlice.actions;\n\n// Export the reducer\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","itemCount","total","cartSlice","name","reducers","addToCart","state","action","push","payload","parseFloat","price","toFixed","removeFromCart","id","forceZeroQuantity","itemsToRemove","filter","item","reduce","sum","length","index","findIndex","splice","resetCart","decreaseQuantity","actions","reducer"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/store/slices/cartSlice.js"],"sourcesContent":["// src/features/cart/cartSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  items: [], // Array to hold items added to the cart\r\n  itemCount: 0,\r\n  total: 0, // Add total property to the initial state\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      state.items.push(action.payload); // Add new item directly to the items array\r\n      state.itemCount += 1; // Increment item count\r\n      state.total = parseFloat((state.total + action.payload.price).toFixed(2)); // Add item price to total and round to 2 decimal places\r\n        },\r\n        removeFromCart: (state, action) => {\r\n      const { id, forceZeroQuantity } = action.payload; // Destructure id and forceZeroQuantity from the payload\r\n      if (forceZeroQuantity) {\r\n        const itemsToRemove = state.items.filter(item => item.id === id);\r\n        state.total = parseFloat((state.total - itemsToRemove.reduce((sum, item) => sum + item.price, 0)).toFixed(2)); // Subtract total price of removed items and round to 2 decimal places\r\n        state.itemCount -= itemsToRemove.length; // Decrement item count by the number of items removed\r\n        state.items = state.items.filter(item => item.id !== id); // Remove all items with the given id\r\n      } else {\r\n        const index = state.items.findIndex(item => item.id === id);\r\n        if (index !== -1) {\r\n          state.total = parseFloat((state.total - state.items[index].price).toFixed(2)); // Subtract item price from total and round to 2 decimal places\r\n          state.items.splice(index, 1); // Remove one instance of the item with the given id\r\n          state.itemCount -= 1; // Decrement item count by one\r\n        }\r\n      }\r\n      if (state.itemCount < 0) {\r\n        state.itemCount = 0; // Prevent negative item count\r\n      }\r\n        },\r\n        resetCart: (state) => {\r\n      state.items = [];\r\n      state.itemCount = 0; // Reset the cart and item count\r\n      state.total = 0; // Reset the total\r\n    },\r\n    decreaseQuantity: (state, action) => {\r\n      const index = state.items.findIndex(item => item.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.total = parseFloat((state.total - state.items[index].price).toFixed(2)); // Subtract item price from total and round to 2 decimal places\r\n        state.items.splice(index, 1); // Remove one instance of the item with the given id\r\n        state.itemCount -= 1; // Decrement item count\r\n        if (state.itemCount < 0) {\r\n          state.itemCount = 0; // Prevent negative item count\r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions\r\nexport const { addToCart, removeFromCart, resetCart, decreaseQuantity } = cartSlice.actions;\r\n\r\n// Export the reducer\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}