{"ast":null,"code":"// import React, { useState } from 'react';\n// export default function Form() {\n//     const [formData, setFormData] = useState({\n//         username: '',\n//         email: '',\n//         password: '',\n//         reenter_password: '',\n//     });\n//     const [response, setResponse] = useState(null); // Store server response status or messages\n\n//     const handleChange = (event) => {\n//         const { name, value } = event.target;\n//         setFormData((prevState) => ({\n//             ...prevState,\n//             [name]: value,\n//         }));\n//     };\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         try {\n//             if (formData.password !== formData.reenter_password) {\n//                 console.log('Passwords do not match');\n//                 setResponse('Passwords do not match');\n//                 return;\n//             }\n//             else if (formData.password.length < 8) {\n//                 setResponse('Password must be at least 8 characters long');\n//                 return;\n//             }\n\n//             // Remove reenter_password key from formData before sending the data\n//             const { reenter_password, ...requestData } = formData;\n//             console.log(requestData);\n\n//             const response = await fetch('http://localhost:8000/api/register/', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify(requestData),\n//             });\n//             console.log(response);\n//             if (response.status === 201) {\n//                 const data = await response.json(); // Parse the server response if needed\n//                 setResponse('Registration successful!');\n//                 console.log('Success:', data);\n//             } else {\n//                 const errorData = await response.json();\n//                 setResponse(`Failed: ${errorData.message || 'Unknown error'}`);\n//                 console.log('Error:', errorData);\n//             }\n//         } catch (error) {\n//             setResponse('Failed: Server error');\n//             console.error('Error:', error);\n//         }\n//     };\n//     const handleResrtPwdRedirect =()=>{\n//         useHistory.push('./resetpassword');\n//     }\n//     return (\n//         <div>\n//             <h2>Register</h2>\n//             <form onSubmit={handleSubmit}>\n//                 {Object.keys(formData).map((key) => (\n//                     <div key={key}>\n//                         <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)}</label>\n//                         <input\n//                             id={key}\n//                             name={key}\n//                             type={key.includes('password') ? 'password' : 'text'} // Use password type for password fields\n//                             placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\n//                             value={formData[key]}\n//                             onChange={handleChange}\n//                         />\n//                     </div>\n//                 ))}\n//                 <div>\n//                     <button type=\"submit\">Create aosijaAccount</button>\n//                 </div>\n//             </form>\n\n//             {response && <p>{response}</p>} {/* Display server or validation messages */}\n//             <button onClick={handleResrtPwdRedirect}>Forgot password?</button>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/Resetpassword.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// export default function Form() {\r\n//     const [formData, setFormData] = useState({\r\n//         username: '',\r\n//         email: '',\r\n//         password: '',\r\n//         reenter_password: '',\r\n//     });\r\n//     const [response, setResponse] = useState(null); // Store server response status or messages\r\n\r\n//     const handleChange = (event) => {\r\n//         const { name, value } = event.target;\r\n//         setFormData((prevState) => ({\r\n//             ...prevState,\r\n//             [name]: value,\r\n//         }));\r\n//     };\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         try {\r\n//             if (formData.password !== formData.reenter_password) {\r\n//                 console.log('Passwords do not match');\r\n//                 setResponse('Passwords do not match');\r\n//                 return;\r\n//             }\r\n//             else if (formData.password.length < 8) {\r\n//                 setResponse('Password must be at least 8 characters long');\r\n//                 return;\r\n//             }\r\n\r\n//             // Remove reenter_password key from formData before sending the data\r\n//             const { reenter_password, ...requestData } = formData;\r\n//             console.log(requestData);\r\n\r\n//             const response = await fetch('http://localhost:8000/api/register/', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify(requestData),\r\n//             });\r\n//             console.log(response);\r\n//             if (response.status === 201) {\r\n//                 const data = await response.json(); // Parse the server response if needed\r\n//                 setResponse('Registration successful!');\r\n//                 console.log('Success:', data);\r\n//             } else {\r\n//                 const errorData = await response.json();\r\n//                 setResponse(`Failed: ${errorData.message || 'Unknown error'}`);\r\n//                 console.log('Error:', errorData);\r\n//             }\r\n//         } catch (error) {\r\n//             setResponse('Failed: Server error');\r\n//             console.error('Error:', error);\r\n//         }\r\n//     };\r\n//     const handleResrtPwdRedirect =()=>{\r\n//         useHistory.push('./resetpassword');\r\n//     }\r\n//     return (\r\n//         <div>\r\n//             <h2>Register</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 {Object.keys(formData).map((key) => (\r\n//                     <div key={key}>\r\n//                         <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)}</label>\r\n//                         <input\r\n//                             id={key}\r\n//                             name={key}\r\n//                             type={key.includes('password') ? 'password' : 'text'} // Use password type for password fields\r\n//                             placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n//                             value={formData[key]}\r\n//                             onChange={handleChange}\r\n//                         />\r\n//                     </div>\r\n//                 ))}\r\n//                 <div>\r\n//                     <button type=\"submit\">Create aosijaAccount</button>\r\n//                 </div>\r\n//             </form>\r\n\r\n//             {response && <p>{response}</p>} {/* Display server or validation messages */}\r\n//             <button onClick={handleResrtPwdRedirect}>Forgot password?</button>\r\n//         </div>\r\n//     );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}