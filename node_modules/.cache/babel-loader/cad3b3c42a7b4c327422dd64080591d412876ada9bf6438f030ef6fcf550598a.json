{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\2afa701e-016e-4a7b-8361-9c7702a04020\\\\src\\\\MainForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [fieldRender, setFieldRender] = useState({\n    username: '',\n    email: '',\n    password: '',\n    reenter_password: ''\n  });\n  const [response, setResponse] = useState(null);\n  const handleChange = event => {\n    console.log(event.target);\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  // const fetchData = async () => {\n  //     try {\n  //         const response = await fetch(`http://localhost:8000/api/user/${formData.id}/`);\n  //         const data = await response.json();\n  //         setFormData((prevData) => ({\n  //             ...prevData,            // Spread the previous formData\n  //             email: data.email,      // Update email\n  //             username: data.username // Update username\n  //           }));\n  //         console.log(data);\n\n  //     }\n  //     catch (error) {\n  //         console.log(error);\n  //     }\n\n  // }\n  // useEffect(() => {\n  //     console.log('this is a new render');\n\n  //     fetchData();\n  // }, [formData.id]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    try {\n      const response = fetch('http://localhost:8000/api/register/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      // console.log(\"formData\", body);\n      console.log(\"response\", response);\n      if (true) {\n        setResponse('Success');\n        console.log('Success');\n      } else {\n        setResponse('Failed');\n        console.log('Failed');\n      }\n    } catch (error) {\n      setResponse = 'Failed';\n    }\n    const {\n      email,\n      name,\n      age\n    } = formData;\n    alert(`\n        ____Your Details____\\n\n        Email: ${email}\n        Name: ${name}\n        Age: ${age}\n        `);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [Object.keys(fieldRender).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: key,\n        children: key.charAt(0).toUpperCase() + key.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: key,\n        placeholder: key.charAt(0).toUpperCase() + key.slice(1),\n        value: formData[key],\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"NEUVqW7Ls7oCzGNFGof2gyHnMnA=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","username","email","password","fieldRender","setFieldRender","reenter_password","response","setResponse","handleChange","event","console","log","target","name","value","prevState","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","error","age","alert","onSubmit","children","Object","keys","map","key","htmlFor","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","_c","$RefreshReg$"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/MainForm.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\n\r\n\r\nexport default function Form  () {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    \r\n    });\r\n    const [fieldRender, setFieldRender] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        reenter_password: '',\r\n    });\r\n    const [response, setResponse] = useState(null); \r\n    const handleChange = (event) => {\r\n        console.log(event.target);\r\n        const {name, value} = event.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n\r\n\r\n\r\n    }\r\n    // const fetchData = async () => {\r\n    //     try {\r\n    //         const response = await fetch(`http://localhost:8000/api/user/${formData.id}/`);\r\n    //         const data = await response.json();\r\n    //         setFormData((prevData) => ({\r\n    //             ...prevData,            // Spread the previous formData\r\n    //             email: data.email,      // Update email\r\n    //             username: data.username // Update username\r\n    //           }));\r\n    //         console.log(data);\r\n\r\n    //     }\r\n    //     catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n        \r\n\r\n    // }\r\n    // useEffect(() => {\r\n    //     console.log('this is a new render');\r\n        \r\n    //     fetchData();\r\n    // }, [formData.id]);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        try{\r\n            const response = fetch('http://localhost:8000/api/register/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n            // console.log(\"formData\", body);\r\n            console.log(\"response\", response);\r\n            \r\n            if (true) {\r\n                setResponse('Success');\r\n                console.log('Success');\r\n            } else {\r\n                setResponse('Failed');\r\n                console.log('Failed');\r\n            }\r\n        }\r\n        catch (error) { \r\n            setResponse=('Failed');\r\n        }\r\n        const {email, name, age} = formData;\r\n        alert(`\r\n        ____Your Details____\\n\r\n        Email: ${email}\r\n        Name: ${name}\r\n        Age: ${age}\r\n        `);\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {Object.keys(fieldRender).map((key) => (\r\n                <div key={key}>\r\n                    <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)}</label>\r\n                    <input\r\n                        name={key}\r\n                        placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                        value={formData[key]}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            ))}\r\n            <div>\r\n                <button type=\"submit\">Create Account</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}