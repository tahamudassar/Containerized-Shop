{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\2afa701e-016e-4a7b-8361-9c7702a04020\\\\src\\\\FetchUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserData = () => {\n  _s();\n  // State for formData, with userID as part of it\n  const [formData, setFormData] = useState({\n    userID: 1 // Initial value for userID\n  });\n\n  // State to store fetched user data\n  const [user, setUser] = useState(null);\n\n  // State for handling form input\n  const [inputUserID, setInputUserID] = useState(formData.userID);\n\n  // useEffect that runs when formData.userID changes\n  useEffect(() => {\n    console.log(\"Fetching new user data...\");\n\n    // Fetch user data from API when userID changes\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/user/${formData.userID}/`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const data = await response.json();\n        setUser(data); // Set the user data in state\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        setUser(null); // Clear user data on error\n      }\n    };\n    fetchUserData(); // Call the function to fetch data\n  }, [formData.userID]); // Dependency array makes it run when userID changes\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission behavior\n    setFormData({\n      ...formData,\n      userID: parseInt(inputUserID, 10)\n    }); // Update userID in formData\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userID\",\n        children: \"Enter UserID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"userID\",\n        value: inputUserID,\n        onChange: e => setInputUserID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Fetch User Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current UserID: \", formData.userID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(UserData, \"G3ji6AYMlpPB43z+VcIfx94IlbI=\");\n_c = UserData;\nexport default UserData;\nvar _c;\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserData","_s","formData","setFormData","userID","user","setUser","inputUserID","setInputUserID","console","log","fetchUserData","response","fetch","ok","Error","status","data","json","error","handleSubmit","e","preventDefault","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","username","email","_c","$RefreshReg$"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/FetchUserData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UserData = () => {\r\n  // State for formData, with userID as part of it\r\n  const [formData, setFormData] = useState({\r\n    userID: 1, // Initial value for userID\r\n  });\r\n\r\n  // State to store fetched user data\r\n  const [user, setUser] = useState(null);\r\n\r\n  // State for handling form input\r\n  const [inputUserID, setInputUserID] = useState(formData.userID);\r\n\r\n  // useEffect that runs when formData.userID changes\r\n  useEffect(() => {\r\n    console.log(\"Fetching new user data...\");\r\n\r\n    // Fetch user data from API when userID changes\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/api/user/${formData.userID}/`);\r\n        if (!response.ok) {\r\n          throw new Error(`Error: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setUser(data); // Set the user data in state\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        setUser(null); // Clear user data on error\r\n      }\r\n    };\r\n\r\n    fetchUserData(); // Call the function to fetch data\r\n  }, [formData.userID]); // Dependency array makes it run when userID changes\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    setFormData({ ...formData, userID: parseInt(inputUserID, 10) }); // Update userID in formData\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Information</h1>\r\n\r\n      {/* Form to change userID */}\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"userID\">Enter UserID:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"userID\"\r\n          value={inputUserID}\r\n          onChange={(e) => setInputUserID(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Fetch User Data</button>\r\n      </form>\r\n\r\n      <p>Current UserID: {formData.userID}</p>\r\n\r\n      {user ? (\r\n        <div>\r\n          <p>Username: {user.username}</p>\r\n          <p>Email: {user.email}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading user data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}