{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\2afa701e-016e-4a7b-8361-9c7702a04020\\\\src\\\\FullCartView.js\",\n  _s = $RefreshSig$();\n// src/FullCartView.js\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFromCart } from './cartSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FullCartView() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const cartItems = useSelector(state => state.cart.items); // Access cart items from Redux store\n  const dispatch = useDispatch(); // Dispatch actions\n\n  useEffect(() => {\n    // Hardcoded clothing item descriptions\n    const hardcodedPosts = [{\n      post_id: 1,\n      main_topic: 'T-Shirt',\n      question_asked: 'What is the material of this T-shirt?',\n      price: 100\n    }, {\n      post_id: 2,\n      main_topic: 'Jeans',\n      question_asked: 'Are these jeans stretchable?',\n      price: 200\n    }, {\n      post_id: 3,\n      main_topic: 'Jacket',\n      question_asked: 'Is this jacket waterproof?',\n      price: 300\n    }, {\n      post_id: 4,\n      main_topic: 'Sneakers',\n      question_asked: 'What sizes are available for these sneakers?',\n      price: 400\n    }, {\n      post_id: 5,\n      main_topic: 'Sweater',\n      question_asked: 'Is this sweater machine washable?',\n      price: 500\n    }];\n\n    // Setting the hardcoded data to the posts state\n    setPosts(hardcodedPosts);\n  }, []);\n  const handleAddToCart = post => {\n    dispatch(addToCart(post)); // Dispatch the action to add item to the cart\n  };\n  const handleRemoveFromCart = post => {\n    dispatch(removeFromCart(post)); // Dispatch the action to remove item from the cart\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Main Topic:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), \" \", post.main_topic, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question Asked:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 65\n        }, this), \" \", post.question_asked, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddToCart(post),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), cartItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Items in Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cartItems.map((cartItem, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [cartItem.main_topic, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveFromCart(cartItem),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n// import React, { useState, useEffect } from 'react';\n\n// const fetchPostData = async (endpoint) => {\n//     try {\n//         const response = await fetch(endpoint); // Basic GET request with fetch\n//         if (!response.ok) {\n//             throw new Error('Network response was not ok');\n//         }\n//         const data = await response.json(); // Parse the JSON data\n//         console.log('Data:', data);\n//         return data;\n//     } catch (error) {\n//         console.error('Error:', error);\n//     }\n// };\n\n// export default function FullCartView() {\n//     const [posts, setPosts] = useState([]);\n\n//     useEffect(() => {\n//       // Fetch posts when the component mounts\n//       const fetchData = async () => {\n//         const data = await fetchPostData('http://localhost:8000/api/posts/latest'); // Replace with your endpoint\n//         setPosts(data.slice(0, 5)); // Limit to the first 5 posts\n//       };\n//       fetchData();\n//     }, []);\n\n//     return (\n//       <div>\n//         <h1>Latest Posts</h1>\n//         {posts.length > 0 ? (\n//           <ul>\n//             {posts.map((post) => (\n//               <li key={post.post_id}>\n//                 <strong>Main Topic:</strong> {post.main_topic}, <strong>Question Asked:</strong> {post.question_asked}\n//               </li>\n//             ))}\n//           </ul>\n//         ) : (\n//           <p>Loading posts...</p>\n//         )}\n//       </div>\n//     );\n// }\n_s(FullCartView, \"7wDELkQHhbBTj9vyVQbHoHpbOM8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = FullCartView;\nvar _c;\n$RefreshReg$(_c, \"FullCartView\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","addToCart","removeFromCart","jsxDEV","_jsxDEV","FullCartView","_s","posts","setPosts","cartItems","state","cart","items","dispatch","hardcodedPosts","post_id","main_topic","question_asked","price","handleAddToCart","post","handleRemoveFromCart","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","cartItem","index","_c","$RefreshReg$"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/FullCartView.js"],"sourcesContent":["// src/FullCartView.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removeFromCart } from './cartSlice';\r\n\r\nexport default function FullCartView() {\r\n    const [posts, setPosts] = useState([]);\r\n    const cartItems = useSelector(state => state.cart.items); // Access cart items from Redux store\r\n    const dispatch = useDispatch(); // Dispatch actions\r\n\r\n    useEffect(() => {\r\n        // Hardcoded clothing item descriptions\r\n        const hardcodedPosts = [\r\n            { post_id: 1, main_topic: 'T-Shirt', question_asked: 'What is the material of this T-shirt?',price : 100 },\r\n            { post_id: 2, main_topic: 'Jeans', question_asked: 'Are these jeans stretchable?',price : 200 },\r\n            { post_id: 3, main_topic: 'Jacket', question_asked: 'Is this jacket waterproof?',price : 300 },\r\n            { post_id: 4, main_topic: 'Sneakers', question_asked: 'What sizes are available for these sneakers?',price : 400 },\r\n            { post_id: 5, main_topic: 'Sweater', question_asked: 'Is this sweater machine washable?',price : 500 },\r\n        ];\r\n\r\n        // Setting the hardcoded data to the posts state\r\n        setPosts(hardcodedPosts);\r\n    }, []);\r\n\r\n    const handleAddToCart = (post) => {\r\n        dispatch(addToCart(post)); // Dispatch the action to add item to the cart\r\n    };\r\n\r\n    const handleRemoveFromCart = (post) => {\r\n        dispatch(removeFromCart(post)); // Dispatch the action to remove item from the cart\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Latest Posts</h1>\r\n        {posts.length > 0 ? (\r\n          <ul>\r\n            {posts.map((post) => (\r\n              <li key={post.post_id}>\r\n                <strong>Main Topic:</strong> {post.main_topic}, <strong>Question Asked:</strong> {post.question_asked}\r\n                <button onClick={() => handleAddToCart(post)}>Add to Cart</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Loading posts...</p>\r\n        )}\r\n        \r\n        {/* Cart Information */}\r\n        {cartItems.length > 0 && (\r\n          <div>\r\n            <h2>Items in Cart</h2>\r\n            <ul>\r\n              {cartItems.map((cartItem, index) => (\r\n                <li key={index}>\r\n                  {cartItem.main_topic}\r\n                  <button onClick={() => handleRemoveFromCart(cartItem)}>Remove</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const fetchPostData = async (endpoint) => {\r\n//     try {\r\n//         const response = await fetch(endpoint); // Basic GET request with fetch\r\n//         if (!response.ok) {\r\n//             throw new Error('Network response was not ok');\r\n//         }\r\n//         const data = await response.json(); // Parse the JSON data\r\n//         console.log('Data:', data);\r\n//         return data;\r\n//     } catch (error) {\r\n//         console.error('Error:', error);\r\n//     }\r\n// };\r\n\r\n// export default function FullCartView() {\r\n//     const [posts, setPosts] = useState([]);\r\n  \r\n//     useEffect(() => {\r\n//       // Fetch posts when the component mounts\r\n//       const fetchData = async () => {\r\n//         const data = await fetchPostData('http://localhost:8000/api/posts/latest'); // Replace with your endpoint\r\n//         setPosts(data.slice(0, 5)); // Limit to the first 5 posts\r\n//       };\r\n//       fetchData();\r\n//     }, []);\r\n  \r\n//     return (\r\n//       <div>\r\n//         <h1>Latest Posts</h1>\r\n//         {posts.length > 0 ? (\r\n//           <ul>\r\n//             {posts.map((post) => (\r\n//               <li key={post.post_id}>\r\n//                 <strong>Main Topic:</strong> {post.main_topic}, <strong>Question Asked:</strong> {post.question_asked}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         ) : (\r\n//           <p>Loading posts...</p>\r\n//         )}\r\n//       </div>\r\n//     );\r\n// }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}