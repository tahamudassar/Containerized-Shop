{"ast":null,"code":"// src/features/cart/cartSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  // Array to hold items added to the cart\n  itemCount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      console.log(\"inside slice\", state.items);\n      const existingItem = state.items.find(item => item.post_id === action.payload.post_id);\n      if (existingItem) {\n        existingItem.quantity += 1; // Increase quantity of existing item\n      } else {\n        state.items.push({\n          ...action.payload,\n          quantity: 1\n        }); // Add new item with quantity 1\n      }\n      state.itemCount += 1; // Increment item count\n    },\n    removeFromCart: (state, action) => {\n      state.items = state.items.filter(item => item.post_id !== action.payload.post_id); // Remove item from cart\n      state.itemCount -= 1; // Decrement item count\n    },\n    resetCart: state => {\n      state.items = [];\n      state.itemCount = 0; // Reset the cart and item count\n    },\n    // increaseQuantity: (state, action) => {\n    //   const item = state.items.find(item => item.post_id === action.payload.post_id);\n    //   console.log(\"indise slice\",state.item);\n    //   item.quantity += 1; // Increase item quantity\n\n    // },\n    decreaseQuantity: (state, action) => {\n      const item = state.items.find(item => item.post_id === action.payload.post_id);\n      console.log(item.main_topic);\n      console.log(item.quantity);\n      if (item.quantity === 1) {\n        console.log(\"Removing item from cart\");\n        removeFromCart(state, action);\n      }\n      item.quantity -= 1; // Decrease item quantity\n    }\n  }\n});\n\n// Export actions\nexport const {\n  addToCart,\n  removeFromCart,\n  resetCart,\n  increaseQuantity,\n  decreaseQuantity\n} = cartSlice.actions;\n\n// Export the reducer\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","itemCount","cartSlice","name","reducers","addToCart","state","action","console","log","existingItem","find","item","post_id","payload","quantity","push","removeFromCart","filter","resetCart","decreaseQuantity","main_topic","increaseQuantity","actions","reducer"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/store/slices/cartSlice.js"],"sourcesContent":["// src/features/cart/cartSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  items: [], // Array to hold items added to the cart\r\n  itemCount: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      console.log(\"inside slice\",state.items);\r\n      const existingItem = state.items.find(item => item.post_id === action.payload.post_id);\r\n      \r\n      if (existingItem) {\r\n        existingItem.quantity += 1; // Increase quantity of existing item\r\n      } else {\r\n        state.items.push({ ...action.payload, quantity: 1 }); // Add new item with quantity 1\r\n      }\r\n      state.itemCount += 1; // Increment item count\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      state.items = state.items.filter(item => item.post_id !== action.payload.post_id); // Remove item from cart\r\n      state.itemCount -= 1; // Decrement item count\r\n    },\r\n    resetCart: (state) => {\r\n      state.items = [];\r\n      state.itemCount = 0; // Reset the cart and item count\r\n    },\r\n    // increaseQuantity: (state, action) => {\r\n    //   const item = state.items.find(item => item.post_id === action.payload.post_id);\r\n    //   console.log(\"indise slice\",state.item);\r\n    //   item.quantity += 1; // Increase item quantity\r\n\r\n    // },\r\n    decreaseQuantity: (state, action) => {\r\n      const item = state.items.find(item => item.post_id === action.payload.post_id);\r\n      console.log(item.main_topic);\r\n      console.log(item.quantity);\r\n      if (item.quantity === 1)\r\n      {\r\n        console.log(\"Removing item from cart\");\r\n        removeFromCart(state,action);\r\n      }\r\n      item.quantity -= 1; // Decrease item quantity\r\n\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions\r\nexport const { addToCart, removeFromCart, resetCart,increaseQuantity,decreaseQuantity } = cartSlice.actions;\r\n\r\n// Export the reducer\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EAAE;EACXC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BC,OAAO,CAACC,GAAG,CAAC,cAAc,EAACH,KAAK,CAACN,KAAK,CAAC;MACvC,MAAMU,YAAY,GAAGJ,KAAK,CAACN,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,KAAKN,MAAM,CAACO,OAAO,CAACD,OAAO,CAAC;MAEtF,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACK,QAAQ,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAC,MAAM;QACLT,KAAK,CAACN,KAAK,CAACgB,IAAI,CAAC;UAAE,GAAGT,MAAM,CAACO,OAAO;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC,CAAC,CAAC;MACxD;MACAT,KAAK,CAACL,SAAS,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC;IACDgB,cAAc,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACkB,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACC,OAAO,KAAKN,MAAM,CAACO,OAAO,CAACD,OAAO,CAAC,CAAC,CAAC;MACnFP,KAAK,CAACL,SAAS,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC;IACDkB,SAAS,EAAGb,KAAK,IAAK;MACpBA,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACL,SAAS,GAAG,CAAC,CAAC,CAAC;IACvB,CAAC;IACD;IACA;IACA;IACA;;IAEA;IACAmB,gBAAgB,EAAEA,CAACd,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAMK,IAAI,GAAGN,KAAK,CAACN,KAAK,CAACW,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,KAAKN,MAAM,CAACO,OAAO,CAACD,OAAO,CAAC;MAC9EL,OAAO,CAACC,GAAG,CAACG,IAAI,CAACS,UAAU,CAAC;MAC5Bb,OAAO,CAACC,GAAG,CAACG,IAAI,CAACG,QAAQ,CAAC;MAC1B,IAAIH,IAAI,CAACG,QAAQ,KAAK,CAAC,EACvB;QACEP,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtCQ,cAAc,CAACX,KAAK,EAACC,MAAM,CAAC;MAC9B;MACAK,IAAI,CAACG,QAAQ,IAAI,CAAC,CAAC,CAAC;IAEtB;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEV,SAAS;EAAEY,cAAc;EAAEE,SAAS;EAACG,gBAAgB;EAACF;AAAiB,CAAC,GAAGlB,SAAS,CAACqB,OAAO;;AAE3G;AACA,eAAerB,SAAS,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}