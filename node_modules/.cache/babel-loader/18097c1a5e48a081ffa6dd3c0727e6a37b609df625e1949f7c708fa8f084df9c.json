{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\2afa701e-016e-4a7b-8361-9c7702a04020\\\\src\\\\MainForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    reenter_password: ''\n  });\n  const [response, setResponse] = useState(null); // Store server response status or messages\n  const navigation = useNavigate();\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      if (formData.password !== formData.reenter_password) {\n        console.log('Passwords do not match');\n        setResponse('Passwords do not match');\n        return;\n      } else if (formData.password.length < 8) {\n        setResponse('Password must be at least 8 characters long');\n        return;\n      }\n\n      // Remove reenter_password key from formData before sending the data\n      const {\n        reenter_password,\n        ...requestData\n      } = formData;\n      console.log(requestData);\n      const response = await fetch('http://localhost:8000/api/register/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      console.log(response);\n      if (response.status === 201) {\n        const data = await response.json(); // Parse the server response if needed\n        setResponse('Registration successful!');\n        console.log('Success:', data);\n      } else {\n        const errorData = await response.json();\n        setResponse(`Failed: ${errorData.message || 'Unknown error'}`);\n        console.log('Error:', errorData);\n      }\n    } catch (error) {\n      setResponse('Failed: Server error');\n      console.error('Error:', error);\n    }\n  };\n  const handleResrtPwdRedirect = () => {\n    navigation('./Resetpassword');\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: key,\n            children: key.charAt(0).toUpperCase() + key.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: key,\n            name: key,\n            type: key.includes('password') ? 'password' : 'text' // Use password type for password fields\n            ,\n            placeholder: key.charAt(0).toUpperCase() + key.slice(1),\n            value: formData[key],\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 30\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResrtPwdRedirect,\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"rBsDjDYilJ+HJnbA83LTRnkdkPc=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","BrowserRouter","useNavigate","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","username","email","password","reenter_password","response","setResponse","navigation","handleChange","event","name","value","target","prevState","handleSubmit","preventDefault","console","log","length","requestData","fetch","method","headers","body","JSON","stringify","status","data","json","errorData","message","error","handleResrtPwdRedirect","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","htmlFor","charAt","toUpperCase","slice","id","type","includes","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/MainForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter, useNavigate } from 'react-router-dom';\r\n\r\nexport default function Form() {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        reenter_password: '',\r\n    });\r\n    const [response, setResponse] = useState(null); // Store server response status or messages\r\n    const navigation=useNavigate();\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (formData.password !== formData.reenter_password) {\r\n                console.log('Passwords do not match');\r\n                setResponse('Passwords do not match');\r\n                return;\r\n            }\r\n            else if (formData.password.length < 8) {\r\n                setResponse('Password must be at least 8 characters long');\r\n                return;\r\n            }\r\n\r\n            // Remove reenter_password key from formData before sending the data\r\n            const { reenter_password, ...requestData } = formData;\r\n            console.log(requestData);\r\n\r\n            const response = await fetch('http://localhost:8000/api/register/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestData),\r\n            });\r\n            console.log(response);\r\n            if (response.status === 201) {\r\n                const data = await response.json(); // Parse the server response if needed\r\n                setResponse('Registration successful!');\r\n                console.log('Success:', data);\r\n            } else {\r\n                const errorData = await response.json();\r\n                setResponse(`Failed: ${errorData.message || 'Unknown error'}`);\r\n                console.log('Error:', errorData);\r\n            }\r\n        } catch (error) {\r\n            setResponse('Failed: Server error');\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n    const handleResrtPwdRedirect = () => {\r\n        navigation('./Resetpassword');\r\n    }\r\n    return (\r\n        <BrowserRouter> \r\n\r\n            <div>\r\n                <h2>Register</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    {Object.keys(formData).map((key) => (\r\n                        <div key={key}>\r\n                            <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)}</label>\r\n                            <input\r\n                                id={key}\r\n                                name={key}\r\n                                type={key.includes('password') ? 'password' : 'text'} // Use password type for password fields\r\n                                placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                                value={formData[key]}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                    <div>\r\n                        <button type=\"submit\">Create Account</button>\r\n                    </div>\r\n                </form>\r\n\r\n                {response && <p>{response}</p>} {/* Display server or validation messages */}\r\n                <button onClick={handleResrtPwdRedirect}>Forgot password?</button>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}