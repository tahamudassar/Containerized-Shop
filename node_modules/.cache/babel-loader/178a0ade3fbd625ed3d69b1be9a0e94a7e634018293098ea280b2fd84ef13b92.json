{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\2afa701e-016e-4a7b-8361-9c7702a04020\\\\src\\\\FullCartView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FullCartView() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Hardcoded clothing item descriptions\n    const hardcodedPosts = [{\n      post_id: 1,\n      main_topic: 'T-Shirt',\n      question_asked: 'What is the material of this T-shirt?'\n    }, {\n      post_id: 2,\n      main_topic: 'Jeans',\n      question_asked: 'Are these jeans stretchable?'\n    }, {\n      post_id: 3,\n      main_topic: 'Jacket',\n      question_asked: 'Is this jacket waterproof?'\n    }, {\n      post_id: 4,\n      main_topic: 'Sneakers',\n      question_asked: 'What sizes are available for these sneakers?'\n    }, {\n      post_id: 5,\n      main_topic: 'Sweater',\n      question_asked: 'Is this sweater machine washable?'\n    }];\n\n    // Setting the hardcoded data to the posts state\n    setPosts(hardcodedPosts);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Item:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), \" \", post.main_topic, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question Asked:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 59\n        }, this), \" \", post.question_asked]\n      }, post.post_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n// import React, { useState, useEffect } from 'react';\n\n// const fetchPostData = async (endpoint) => {\n//     try {\n//         const response = await fetch(endpoint); // Basic GET request with fetch\n//         if (!response.ok) {\n//             throw new Error('Network response was not ok');\n//         }\n//         const data = await response.json(); // Parse the JSON data\n//         console.log('Data:', data);\n//         return data;\n//     } catch (error) {\n//         console.error('Error:', error);\n//     }\n// };\n\n// export default function FullCartView() {\n//     const [posts, setPosts] = useState([]);\n\n//     useEffect(() => {\n//       // Fetch posts when the component mounts\n//       const fetchData = async () => {\n//         const data = await fetchPostData('http://localhost:8000/api/posts/latest'); // Replace with your endpoint\n//         setPosts(data.slice(0, 5)); // Limit to the first 5 posts\n//       };\n//       fetchData();\n//     }, []);\n\n//     return (\n//       <div>\n//         <h1>Latest Posts</h1>\n//         {posts.length > 0 ? (\n//           <ul>\n//             {posts.map((post) => (\n//               <li key={post.post_id}>\n//                 <strong>Main Topic:</strong> {post.main_topic}, <strong>Question Asked:</strong> {post.question_asked}\n//               </li>\n//             ))}\n//           </ul>\n//         ) : (\n//           <p>Loading posts...</p>\n//         )}\n//       </div>\n//     );\n// }\n_s(FullCartView, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = FullCartView;\nvar _c;\n$RefreshReg$(_c, \"FullCartView\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FullCartView","_s","posts","setPosts","hardcodedPosts","post_id","main_topic","question_asked","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","_c","$RefreshReg$"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/FullCartView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function FullCartView() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Hardcoded clothing item descriptions\r\n        const hardcodedPosts = [\r\n            { post_id: 1, main_topic: 'T-Shirt', question_asked: 'What is the material of this T-shirt?' },\r\n            { post_id: 2, main_topic: 'Jeans', question_asked: 'Are these jeans stretchable?' },\r\n            { post_id: 3, main_topic: 'Jacket', question_asked: 'Is this jacket waterproof?' },\r\n            { post_id: 4, main_topic: 'Sneakers', question_asked: 'What sizes are available for these sneakers?' },\r\n            { post_id: 5, main_topic: 'Sweater', question_asked: 'Is this sweater machine washable?' },\r\n        ];\r\n\r\n        // Setting the hardcoded data to the posts state\r\n        setPosts(hardcodedPosts);\r\n    }, []);\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Latest Posts</h1>\r\n        {posts.length > 0 ? (\r\n          <ul>\r\n            {posts.map((post) => (\r\n              <li key={post.post_id}>\r\n                <strong>Item:</strong> {post.main_topic}, <strong>Question Asked:</strong> {post.question_asked}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Loading posts...</p>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// const fetchPostData = async (endpoint) => {\r\n//     try {\r\n//         const response = await fetch(endpoint); // Basic GET request with fetch\r\n//         if (!response.ok) {\r\n//             throw new Error('Network response was not ok');\r\n//         }\r\n//         const data = await response.json(); // Parse the JSON data\r\n//         console.log('Data:', data);\r\n//         return data;\r\n//     } catch (error) {\r\n//         console.error('Error:', error);\r\n//     }\r\n// };\r\n\r\n// export default function FullCartView() {\r\n//     const [posts, setPosts] = useState([]);\r\n  \r\n//     useEffect(() => {\r\n//       // Fetch posts when the component mounts\r\n//       const fetchData = async () => {\r\n//         const data = await fetchPostData('http://localhost:8000/api/posts/latest'); // Replace with your endpoint\r\n//         setPosts(data.slice(0, 5)); // Limit to the first 5 posts\r\n//       };\r\n//       fetchData();\r\n//     }, []);\r\n  \r\n//     return (\r\n//       <div>\r\n//         <h1>Latest Posts</h1>\r\n//         {posts.length > 0 ? (\r\n//           <ul>\r\n//             {posts.map((post) => (\r\n//               <li key={post.post_id}>\r\n//                 <strong>Main Topic:</strong> {post.main_topic}, <strong>Question Asked:</strong> {post.question_asked}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         ) : (\r\n//           <p>Loading posts...</p>\r\n//         )}\r\n//       </div>\r\n//     );\r\n// }\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMO,cAAc,GAAG,CACnB;MAAEC,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE,SAAS;MAAEC,cAAc,EAAE;IAAwC,CAAC,EAC9F;MAAEF,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE,OAAO;MAAEC,cAAc,EAAE;IAA+B,CAAC,EACnF;MAAEF,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAA6B,CAAC,EAClF;MAAEF,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE,UAAU;MAAEC,cAAc,EAAE;IAA+C,CAAC,EACtG;MAAEF,OAAO,EAAE,CAAC;MAAEC,UAAU,EAAE,SAAS;MAAEC,cAAc,EAAE;IAAoC,CAAC,CAC7F;;IAED;IACAJ,QAAQ,CAACC,cAAc,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBV,KAAK,CAACW,MAAM,GAAG,CAAC,gBACfd,OAAA;MAAAS,QAAA,EACGN,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACdhB,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,IAAI,CAACT,UAAU,EAAC,IAAE,eAAAP,OAAA;UAAAS,QAAA,EAAQ;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,IAAI,CAACR,cAAc;MAAA,GADxFQ,IAAI,CAACV,OAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELb,OAAA;MAAAS,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAX,EAAA,CAjFwBD,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}