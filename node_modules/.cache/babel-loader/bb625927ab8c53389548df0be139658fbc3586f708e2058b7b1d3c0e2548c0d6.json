{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\2afa701e-016e-4a7b-8361-9c7702a04020\\\\src\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import { BrowserRouter, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [response, setResponse] = useState(null); // Store server response status or messages\n  // const navigation=useNavigate();\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/token/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      console.log(response);\n      if (response.status === 200) {\n        const data = await response.json(); // Parse the server response if needed\n        setResponse('Registration successful!');\n        console.log('Success:', data);\n      } else {\n        const errorData = await response.json();\n        setResponse(`Failed: ${errorData.message || 'Unknown error'}`);\n        console.log('Error:', errorData);\n      }\n    } catch (error) {\n      setResponse('Failed: Server error');\n      console.error('Error:', error);\n    }\n  };\n  // const handleResrtPwdRedirect = () => {\n  //     navigation('./Resetpassword');\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [Object.keys(formData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: key,\n          children: key.charAt(0).toUpperCase() + key.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: key,\n          name: key,\n          type: key.includes('password') ? 'password' : 'text' // Use password type for password fields\n          ,\n          placeholder: key.charAt(0).toUpperCase() + key.slice(1),\n          value: formData[key],\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 30\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n_s(Form, \"qE/hv3kdePxXuSQ1Jf/w+3ySX6Q=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","_s","formData","setFormData","email","password","response","setResponse","handleChange","event","name","value","target","prevState","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","requestData","console","log","status","data","json","errorData","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","htmlFor","charAt","toUpperCase","slice","id","type","includes","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/SignIn.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// import { BrowserRouter, useNavigate } from 'react-router-dom';\r\n\r\nexport default function Form() {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [response, setResponse] = useState(null); // Store server response status or messages\r\n    // const navigation=useNavigate();\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n\r\n            const response = await fetch('http://localhost:8000/api/token/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(requestData),\r\n            });\r\n            console.log(response);\r\n            if (response.status === 200) {\r\n                const data = await response.json(); // Parse the server response if needed\r\n                setResponse('Registration successful!');\r\n                console.log('Success:', data);\r\n            } else {\r\n                const errorData = await response.json();\r\n                setResponse(`Failed: ${errorData.message || 'Unknown error'}`);\r\n                console.log('Error:', errorData);\r\n            }\r\n        } catch (error) {\r\n            setResponse('Failed: Server error');\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n    // const handleResrtPwdRedirect = () => {\r\n    //     navigation('./Resetpassword');\r\n    // }\r\n    return (\r\n\r\n            <div>\r\n                <h2>Register</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    {Object.keys(formData).map((key) => (\r\n                        <div key={key}>\r\n                            <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)}</label>\r\n                            <input\r\n                                id={key}\r\n                                name={key}\r\n                                type={key.includes('password') ? 'password' : 'text'} // Use password type for password fields\r\n                                placeholder={key.charAt(0).toUpperCase() + key.slice(1)}\r\n                                value={formData[key]}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                    <div>\r\n                        <button type=\"submit\">Create Account</button>\r\n                    </div>\r\n                </form>\r\n\r\n                {response && <p>{response}</p>} {/* Display server or validation messages */}\r\n                {/* <button onClick={handleResrtPwdRedirect}>Forgot password?</button> */}\r\n            </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}