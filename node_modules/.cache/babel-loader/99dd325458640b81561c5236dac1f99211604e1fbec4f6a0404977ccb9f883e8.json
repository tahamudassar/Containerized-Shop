{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\2afa701e-016e-4a7b-8361-9c7702a04020\\\\src\\\\FetchUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserData = () => {\n  _s();\n  // State for formData, with userID as part of it\n  const [formData, setFormData] = useState({\n    userID: 1 // Initial value for userID\n  });\n\n  // State to store fetched user data\n  const [user, setUser] = useState(null);\n\n  // useEffect that runs when formData.userID changes\n  useEffect(() => {\n    console.log(\"this is a new render\");\n\n    // Fetch user data from API when userID changes\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/api/user/${formData.userID}/`);\n        const data = await response.json();\n        setUser(data); // Set the user data in state\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserData(); // Call the function to fetch data\n  }, [formData.userID]); // Dependency array makes it run when userID changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"UserID: \", formData.userID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFormData({\n        ...formData,\n        userID: formData.userID + 1\n      }),\n      children: \"Change UserID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(UserData, \"jYRDObu4mZ76C+N+liKIXKTK+GM=\");\n_c = UserData;\nexport default UserData;\nvar _c;\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserData","_s","formData","setFormData","userID","user","setUser","console","log","fetchUserData","response","fetch","data","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","username","email","onClick","_c","$RefreshReg$"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/FetchUserData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UserData = () => {\r\n  // State for formData, with userID as part of it\r\n  const [formData, setFormData] = useState({\r\n    userID: 1, // Initial value for userID\r\n  });\r\n\r\n  // State to store fetched user data\r\n  const [user, setUser] = useState(null);\r\n\r\n  // useEffect that runs when formData.userID changes\r\n  useEffect(() => {\r\n    console.log(\"this is a new render\");\r\n\r\n    // Fetch user data from API when userID changes\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/api/user/${formData.userID}/`);\r\n        const data = await response.json();\r\n        setUser(data); // Set the user data in state\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData(); // Call the function to fetch data\r\n  }, [formData.userID]); // Dependency array makes it run when userID changes\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Information</h1>\r\n      <p>UserID: {formData.userID}</p>\r\n      {user ? (\r\n        <div>\r\n          <p>Username: {user.username}</p>\r\n          <p>Email: {user.email}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading user data...</p>\r\n      )}\r\n\r\n      {/* Optionally, you can add a button to change the userID */}\r\n      <button onClick={() => setFormData({ ...formData, userID: formData.userID + 1 })}>\r\n        Change UserID\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,MAAM,EAAE,CAAC,CAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;;IAEnC;IACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkCT,QAAQ,CAACE,MAAM,GAAG,CAAC;QAClF,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDL,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,CAACP,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEvB,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpB,OAAA;MAAAgB,QAAA,GAAG,UAAQ,EAACb,QAAQ,CAACE,MAAM;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/Bd,IAAI,gBACHN,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,GAAG,YAAU,EAACV,IAAI,CAACe,QAAQ;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCpB,OAAA;QAAAgB,QAAA,GAAG,SAAO,EAACV,IAAI,CAACgB,KAAK;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,gBAENpB,OAAA;MAAAgB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B,eAGDpB,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMnB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEE,MAAM,EAAEF,QAAQ,CAACE,MAAM,GAAG;MAAE,CAAC,CAAE;MAAAW,QAAA,EAAC;IAElF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9CID,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}