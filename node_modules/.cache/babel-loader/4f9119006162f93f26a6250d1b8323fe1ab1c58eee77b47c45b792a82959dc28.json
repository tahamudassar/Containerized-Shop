{"ast":null,"code":"// src/features/cart/cartSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  // Array to hold items added to the cart\n  itemCount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const existingItem = state.items.find(item => item.post_id === action.payload.post_id);\n      if (existingItem) {\n        existingItem.quantity += 1; // Increase quantity of existing item\n      } else {\n        state.items.push({\n          ...action.payload,\n          quantity: 1\n        }); // Add new item with quantity 1\n      }\n      state.itemCount += 1; // Increment item count\n    },\n    removeFromCart: (state, action) => {\n      const {\n        post_id,\n        forceZeroQuantity\n      } = action.payload; // Destructure post_id and forceZeroQuantity from the payload\n      const item = state.items.find(item => item.post_id === post_id);\n      if (item) {\n        if (forceZeroQuantity) {\n          // Directly set the quantity to zero when forceZeroQuantity is true\n          item.quantity = 0;\n          state.items = state.items.filter(i => i.post_id !== post_id); // Remove the item completely if quantity is set to zero\n        } else {\n          if (item.quantity > 1) {\n            // Decrease the quantity if it’s greater than 1\n            item.quantity -= 1;\n          } else {\n            // Remove the item if the quantity is 1\n            state.items = state.items.filter(i => i.post_id !== post_id);\n          }\n        }\n        state.itemCount -= 1; // Decrement item count\n        if (state.itemCount < 0) {\n          state.itemCount = 0; // Prevent negative item count\n        }\n      }\n      console.log(\"inside remove from cart\");\n    },\n    resetCart: state => {\n      state.items = [];\n      state.itemCount = 0; // Reset the cart and item count\n    },\n    // increaseQuantity: (state, action) => {\n    //   const item = state.items.find(item => item.post_id === action.payload.post_id);\n    //   console.log(\"indise slice\",state.item);\n    //   item.quantity += 1; // Increase item quantity\n\n    // },\n    decreaseQuantity: (state, action) => {\n      const item = state.items.find(item => item.post_id === action.payload.post_id);\n      console.log(item.main_topic);\n      console.log(item.quantity);\n      const idd = item.post_id;\n      if (item.quantity === 1) {\n        console.log(\"Removing item from cart\");\n        removeFromCart({\n          idd\n        });\n      }\n      item.quantity -= 1; // Decrease item quantity\n    }\n  }\n});\n\n// Export actions\nexport const {\n  addToCart,\n  removeFromCart,\n  resetCart,\n  increaseQuantity,\n  decreaseQuantity\n} = cartSlice.actions;\n\n// Export the reducer\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","itemCount","cartSlice","name","reducers","addToCart","state","action","existingItem","find","item","post_id","payload","quantity","push","removeFromCart","forceZeroQuantity","filter","i","console","log","resetCart","decreaseQuantity","main_topic","idd","increaseQuantity","actions","reducer"],"sources":["C:/Development/2afa701e-016e-4a7b-8361-9c7702a04020/src/store/slices/cartSlice.js"],"sourcesContent":["// src/features/cart/cartSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  items: [], // Array to hold items added to the cart\r\n  itemCount: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const existingItem = state.items.find(item => item.post_id === action.payload.post_id);\r\n      \r\n      if (existingItem) {\r\n        existingItem.quantity += 1; // Increase quantity of existing item\r\n      } else {\r\n        state.items.push({ ...action.payload, quantity: 1 }); // Add new item with quantity 1\r\n      }\r\n      state.itemCount += 1; // Increment item count\r\n      \r\n    },\r\n    removeFromCart: (state, action) => {\r\n      const { post_id, forceZeroQuantity } = action.payload;  // Destructure post_id and forceZeroQuantity from the payload\r\n      const item = state.items.find(item => item.post_id === post_id);\r\n      \r\n      if (item) {\r\n        if (forceZeroQuantity) {\r\n          // Directly set the quantity to zero when forceZeroQuantity is true\r\n          item.quantity = 0;\r\n          state.items = state.items.filter(i => i.post_id !== post_id); // Remove the item completely if quantity is set to zero\r\n        } else {\r\n          if (item.quantity > 1) {\r\n            // Decrease the quantity if it’s greater than 1\r\n            item.quantity -= 1;\r\n          } else {\r\n            // Remove the item if the quantity is 1\r\n            state.items = state.items.filter(i => i.post_id !== post_id);\r\n          }\r\n        }\r\n        state.itemCount -= 1; // Decrement item count\r\n        if (state.itemCount < 0) {\r\n          state.itemCount = 0; // Prevent negative item count\r\n        }\r\n      }\r\n      console.log(\"inside remove from cart\");\r\n    },\r\n    \r\n    \r\n    resetCart: (state) => {\r\n      state.items = [];\r\n      state.itemCount = 0; // Reset the cart and item count\r\n    },\r\n    // increaseQuantity: (state, action) => {\r\n    //   const item = state.items.find(item => item.post_id === action.payload.post_id);\r\n    //   console.log(\"indise slice\",state.item);\r\n    //   item.quantity += 1; // Increase item quantity\r\n\r\n    // },\r\n    decreaseQuantity: (state, action) => {\r\n      const item = state.items.find(item => item.post_id === action.payload.post_id);\r\n      console.log(item.main_topic);\r\n      console.log(item.quantity);\r\n      const idd = item.post_id;\r\n      if (item.quantity === 1)\r\n      {\r\n        console.log(\"Removing item from cart\");\r\n        removeFromCart({idd});\r\n      }\r\n      item.quantity -= 1; // Decrease item quantity\r\n\r\n    },\r\n  },\r\n});\r\n\r\n// Export actions\r\nexport const { addToCart, removeFromCart, resetCart,increaseQuantity,decreaseQuantity } = cartSlice.actions;\r\n\r\n// Export the reducer\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}